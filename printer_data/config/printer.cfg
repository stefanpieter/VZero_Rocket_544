# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

# See the example.cfg file for a description of available parameters.
[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]
[exclude_object]
#[include moonraker_obico_macros.cfg]


[mcu EBBCan]
canbus_uuid: f025ef3fed50
# V1.2
# Guide: https://github.com/EricZimmerman/VoronTools/blob/main/EBB_CAN.md
# Guide: https://docs.meteyou.wtf/btt-ebb/klipper/
# Guide: https://maz0r.github.io/klipper_canbus/toolhead/ebb36-42_v1.1.html
# Guide: https://github.com/maz0r/klipper_canbus/blob/main/index.md
#
# sudo service klipper stop
# cd ~/klipper
# git pull
# make clean
# make menuconfig
#
## Enable extra low-level configuration options: check
## Micro-controller Architecture: STMicroelectronics STM32
## Processor model: STM32G0B1
## Bootloader offset: 8KiB bootloader (with CanBoot)
## Clock Reference: 8 MHz crystal
## Communication interface: CAN bus (on PB0/PB1)
## CAN bus speed: 500000
#
# python3 ~/katapult/scripts/flashtool.py -i can0 -u f025ef3fed50 -f ~/klipper/out/klipper.bin




[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    60,60,20

[input_shaper]
#shaper_freq_x: 53.0
#shaper_freq_y: 57.0
#shaper_type_x: mzv
#shaper_type_y: mzv

[firmware_retraction]
retract_length: 0.85
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 60
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[temperature_sensor skr_mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor ebb_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[mcu]
##	Obtain mcu value by "ls -l /dev/serial/by-id/" 
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFDB055641343428722043-if00
## How to flash SKR Mini E3 V2.0
## https://docs.vorondesign.com/build/software/miniE3_v20_klipper.html
## https://docs.vorondesign.com/build/electrical/sw_miniE3_v20_wiring.html
## https://www.klipper3d.org/SDCard_Updates.html#board-definitions
# sudo service klipper stop
# cd ~/klipper
# git pull
# make clean
# make menuconfig
#
## Details:
## Ensure that the micro-controller architecture is set to ‘STM32’
## Ensure that the processor model is set to ‘STM32F103’
## Ensure that the Bootloader offset is set to ‘28KiB’
## Ensure that the Clock Reference is set to ‘8 Mhz’
## Ensure that “Enable extra low-level configuration options” is selected.
## Ensure that “Use USB for communication (instead of serial)” is selected.
## Ensure that “GPIO pins to set at micro-controller startup” includes ‘!PA14’.
# 
# make
# ./scripts/flash-sdcard.sh /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFDB055641343428722043-if00 btt-skr-mini-e3-v2
# sudo service klipper start

# BIGTREETECH SKR MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".


[stepper_x]
step_pin: PB13
dir_pin: PB12           # check https://docs.vorondesign.com/build/startup/#v0 if moving in the wrong direction
enable_pin: !PB14
rotation_distance: 40
microsteps: 128 # default 16
endstop_pin: tmc2209_stepper_x:virtual_endstop #PC0 
position_endstop: 120
position_max: 120
homing_speed: 20        # Increase after initial setup, Max 100
homing_retract_dist: 0 #5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False           # default True
run_current: 0.8            # For V0.1 spec NEMA14 40Ncm default 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999  # default 500
diag_pin: ^PC0 # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 60 # 255 is most sensitive value, 0 is least sensitive


[stepper_y]
step_pin: PB10
dir_pin: PB2            # check https://docs.vorondesign.com/build/startup/#v0 if moving in the wrong direction
enable_pin: !PB11
rotation_distance: 40
microsteps: 128 # default 16
endstop_pin: tmc2209_stepper_y:virtual_endstop #PC1
position_endstop: 120
position_max: 120
homing_speed: 20        # Increase after initial setup, Max 100
homing_retract_dist: 0 #5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.8        # For V0.1 spec NEMA14 40Ncm default 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^PC1     # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 60 # 255 is most sensitive value, 0 is least sensitive

[stepper_z]
step_pin: PB0
dir_pin: PC5           # Remove ! if moving opposite direction
enable_pin: !PB1
rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 64
endstop_pin: PC2
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 10        # Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
run_current: 0.2       # For V0.1 spec NEMA17 w/ integrated lead screw https://github.com/VoronDesign/Voron-0/issues/111
hold_current: 0.15
sense_resistor: 0.110
stealthchop_threshold: 500


[extruder]
step_pin: EBBCan: PD0 #PB3
dir_pin: !EBBCan: PD1 #!PB4            # Add ! if moving opposite direction
enable_pin: !EBBCan: PD2 #!PD2
full_steps_per_rotation: 200    # 1.8° motor = 200
rotation_distance: 22.23        # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 64
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13 #PC8
sensor_type: ATC Semitec 104GT-2 # Adjust for your hotend thermistor (see options below)
sensor_pin: EBBCan: PA3 #PA0
#control: pid            # Do PID calibration
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 285
max_power: 1.0
min_extrude_temp: 190
max_extrude_only_distance: 780.0
max_extrude_cross_section: 0.8
#pressure_advance: 0.0   # See tuning pressure advance doc
pressure_advance_smooth_time: 0.020
smooth_time: 0.25

[tmc2209 extruder]
uart_pin: EBBCan: PA15 #PC11
# tx_pin: PC10
# uart_address: 3
interpolate: False
run_current: 0.3  

## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5   # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3   # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
#run_current: 0.6   # for LDO 36STH20-1004AHG

sense_resistor: 0.110
stealthchop_threshold: 99999 # Set to 0 for spreadcycle, avoid using stealthchop on extruder


[heater_bed]
heater_pin: PC12
sensor_type: Generic 3950
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
smooth_time: 3.0
max_power: 0.8
#control: pid
min_temp: 0
max_temp: 120
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


[printer]
kinematics: corexy
max_velocity: 500
max_accel: 7000
max_accel_to_decel: 7000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0


[heater_fan hotend_fan]
pin: EBBCan: PA1 #PC9
max_power: 1.0
#cycle_time: 0.010
kick_start_time: 0.50
heater: extruder
heater_temp: 50.0
#fan_speed: 0.50         # You can't PWM the delta fan unless using blue wire


[fan]
pin: EBBCan: PA0 #PC6
max_power: 1.0
kick_start_time: 0.5
# off_below: 0.13
# cycle_time: 0.010

[fan_generic filter_fan]
# SET_FAN_SPEED FAN=config_name SPEED=<speed> This command sets the speed of a fan. must be between 0.0 and 1.0
pin: PC7
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

[temperature_fan Raspberry_Pi]
sensor_type: temperature_host
pin: PC6 ## Change this to whichever PWM pin you can use on your board this is for a SKR-2 not a mini board
control: watermark
max_delta: 2
target_temp: 50
max_speed: 0.45
min_speed: 0.45
min_temp: 0
max_temp : 90

[output_pin leds]
pin: PC9
pwm: True
value: 0
cycle_time: 0.010

[idle_timeout]
timeout: 1800

[include sensorless.cfg]

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G28 Z
    G90
    G1 X60 Y60 Z20
  {% endif %}

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[mcu host]
serial: /tmp/klipper_host_mcu
## https://www.klipper3d.org/RPi_microcontroller.html

[temperature_sensor Chamber]
sensor_type: DS18B20
serial_no: 28-3c01d075c367
#   Each 1-wire device has a unique serial number used to identify the device,
#   usually in the format 28-031674b175ff. This parameter must be provided.
#   Attached 1-wire devices can be listed using the following Linux command:
#   ls /sys/bus/w1/devices/
ds18_report_time: 3
#   Interval in seconds between readings. Default is 3.0, with a minimum of 1.0
sensor_mcu: host
#   The micro-controller to read from. Must be the host_mcu

[pause_resume]

[gcode_macro PAUSE]
# description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {%set act_extrude_temp = printer.extruder.temperature|int %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if act_extrude_temp > min_extrude_temp %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
# description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {%set act_extrude_temp = printer.extruder.temperature|int %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if act_extrude_temp > min_extrude_temp %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    CANCEL_PRINT_BASE

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    SET_TEMPERATURE_FAN_TARGET temperature_fan=Raspberry_Pi TARGET=48
    SET_PIN PIN=leds VALUE=0.20
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X115 Y{max_y} F3600          ; park nozzle at rear
    M18                            ; turn off all motors
    SET_TEMPERATURE_FAN_TARGET temperature_fan=Raspberry_Pi TARGET=55
    UPDATE_DELAYED_GCODE ID=turn_off_filter DURATION=1800
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F600                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[delayed_gcode turn_off_filter]
gcode:
  SET_FAN_SPEED FAN=filter_fan SPEED=0
  SET_PIN PIN=leds VALUE=0.00


# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "Generic 3950" (Keenovo Heater Pad)
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32"
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.009
#*# pid_ki = 2.011
#*# pid_kd = 179.591
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.018
#*# pid_ki = 1.954
#*# pid_kd = 107.731
#*#
#*# [stepper_z]
#*# position_endstop = 119.550
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 94.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 70.0
